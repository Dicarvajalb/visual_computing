<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Convoluciones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Convoluciones/</guid><description>1. Convoluciones # Problem statement # Una convolucion sobre una imagen es un calculo matematico sobre un conjunto de pixeles sobre la misma, esta operacion hace uso de los denominados Kernel; Un kernel es una matriz con valores determinados los cuales permiten aplicar diferentes mascaras sobre las imagenes, los valores dentro de las matrices de los kernel se pueden alterar con base en el resultado que se desee obtener se pueden modificar.</description></item><item><title/><link>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Histograma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Histograma/</guid><description>Histograma # Problem statement # Un histograma de imagen es una representación gráfica de la distribución tonal en una imagen digital. Para esto traza el número de píxeles para cada valor tonal de manera que al mirar el histograma de una imagen específica, un espectador podrá juzgar la distribución tonal completa de un vistazo.
Tiene muchos usos entre ellos sirve dar al fotógrafo una mejor comprensión de los valores de brillo en una imagen</description></item><item><title/><link>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Lightness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Lightness/</guid><description>Lightness # Problem statement # Sería útil tener una herramienta que permita la manipulación de luminosidad de una imagen, y de esta manera poder aclarar imágenes oscuras para poder ver sus siluetas.
Background # Manipulación de pixeles usando P5.js Uso de HSL Conversión entre HSL y RGB Code # Pasos dentro del código:
Cargar la imagen a manipular y el botón de rango Dado un valor en el botón de rango, se aumenta la luminosidad de cada pixel en la imagen.</description></item><item><title/><link>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Multiplicacion-RGB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dicarvajalb.github.io/visual_computing/docs/shortcodes/Taller-1/Multiplicacion-RGB/</guid><description>Multiplicación RGB # Problem statement # ¿Qué sucede si multiplicamos dos colores RGB?
Code # Pasos dentro del código:
Obtener los 2 valores RGB de la paleta Calcular su multiplicación y mostrarla en pantalla source code let angle = 0; let speed = 0.05; let circleColor = true; function setup() { createCanvas(400, 400); } function draw() { background(220); angle += speed; strokeWeight(1) circle(200,200,400); cirrcle(375) } function cirrcle(size){ fill(255,255,0) if(circleColor){ fill(0,0,255) } circleColor = !</description></item></channel></rss>